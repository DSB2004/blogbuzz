CREATE TABLE BLOG(
    ID VARCHAR(36) PRIMARY KEY DEFAULT UUID(),
    TITLE VARCHAR(256) NOT NULL,
    BODY TEXT NOT NULL,
    CREATED_BY VARCHAR(100) NOT NULL,
    IMG VARCHAR(256) NOT NULL,
    CREATED_AT DATE NOT NULL DEFAULT CURRENT_DATE,
    FOREIGN KEY (CREATED_BY) REFERENCES USER (EMAIL)  
);

CREATE TABLE LIKES(
    BLOG_ID VARCHAR(36) NOT NULL,
    LIKED_BY VARCHAR(100) NOT NULL,
    FOREIGN KEY (BLOG_ID) REFERENCES BLOG(ID),
    FOREIGN KEY (LIKED_BY) REFERENCES USER(EMAIL),
    UNIQUE (BLOG_ID, LIKED_BY) 
);

CREATE TABLE SAVES(
    BLOG_ID VARCHAR(36) NOT NULL,
    SAVED_BY VARCHAR(100) NOT NULL,
    FOREIGN KEY (BLOG_ID) REFERENCES BLOG(ID),
    FOREIGN KEY (SAVED_BY) REFERENCES USER(EMAIL),
    UNIQUE (BLOG_ID, SAVED_BY) 
);


CREATE TABLE TAGS(
  BLOG_ID VARCHAR(36) NOT NULL,
  TAG VARCHAR(256) NOT NULL,
   FOREIGN KEY (BLOG_ID) REFERENCES BLOG(ID),
  UNIQUE (BLOG_ID,TAG)
);


CREATE VIEW BLOG_PROFILE AS 
  SELECT B.*,
    COUNT(DISTINCT L.LIKED_BY) AS 'LIKES',
    COUNT(DISTINCT S.SAVED_BY) AS 'SAVES',
    GROUP_CONCAT(DISTINCT T.TAG) AS 'TAGS'
  FROM BLOG B
  LEFT JOIN LIKES L ON B.ID = L.BLOG_ID  
  LEFT JOIN SAVES S ON B.ID = S.BLOG_ID  
  LEFT JOIN TAGS T ON B.ID = T.BLOG_ID
  GROUP BY B.ID;
